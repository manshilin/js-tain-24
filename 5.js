console.log("Завдання: 5 ==============================");

// Функція task5, яка буде використовувати проміси.
function task5() {
  // Створюємо змінну counter яка буде лічильником та присвоюємо значення 0
  let counter = 0;

  // Оголошуємо змінну interval для подальшого використання
  let interval;

  // Створюємо проміс з іменем intervalPromise.
  const intervalPromise = new Promise((resolve, reject) => {
    // Використовуємо функцію setInterval, щоб імітувати асинхронну операцію,
    // яка повторюється кожну секунду
    interval = setInterval(() => {
      // збільшуємо лічильник на 1
      counter += 1;

      // Виводимо в консоль поточне значення лічильника
      console.log(`Значення лічильника: ${counter}`);

      // Коли лічильник досягає 5, використовуємо clearInterval
      // та викликаємо resolve, який повертає значення лічильника.
      if (counter === 5) {
        clearInterval(interval);
        resolve(counter);
      }
    }, 1000);
  });

  // Використовуємо .then метод для отримання значення, яке було передане
  // у функцію resolve() в нашому промісі, та виводимо його в консоль.
  intervalPromise
    .then((value) => {
      console.log(`Лічильник досяг значення ${value}`);
    })

  // Використовуємо .catch метод для обробки випадків, коли проміс
  // переходить в стан "rejected". Та виводимо в консоль помилку.
    .catch((error) => {
      console.log(error.message);
    })

  // Обробляємо помилку, якщо вона виникне
  // Ми використовуємо .finally метод для виконання дій незалежно від того,
  // в якому стані завершився наш проміс, та виводимо повідомлення
  // "Завершення лічильника"
    .finally(() => {
      console.log("Завершення лічильника");
    });
}

// Викликаємо функцію task5
task5();